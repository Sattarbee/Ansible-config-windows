- name: Ensure report directory exists
  ansible.windows.win_file:
    path: "C:\\Users\\p-sve7fz\\Desktop"
    state: directory

- name: Parse KB numbers for required_updates
  set_fact:
    required_updates: >-
      [{% for update in required_updates | default([]) %}
        {
          "name": "{{ update.name | default('N/A') }}",
          "installed_date": "{{ update.installed_date | default('') }}",
          "kb": "{{ (update.name | default('') | regex_search('KB[0-9]+', ignorecase=True)) | default('N/A') }}"
        }{% if not loop.last %},{% endif %}
      {% endfor %}]

- name: Parse KB numbers for last_applied_patches
  set_fact:
    last_applied_patches: >-
      [{% for update in last_applied_patches | default([]) %}
        {
          "name": "{{ update.name | default('N/A') }}",
          "installed_date": "{{ update.installed_date | default('') }}",
          "kb": "{{ (update.name | default('') | regex_search('KB[0-9]+', ignorecase=True)) | default('N/A') }}"
        }{% if not loop.last %},{% endif %}
      {% endfor %}]

- name: Aggregate required_updates from all hosts
  ansible.builtin.set_fact:
    required_updates_dict: >-
      {{
        dict(ansible_play_hosts | map('extract', hostvars, 'required_updates')
        | zip(ansible_play_hosts))
      }}
  run_once: true

- name: Aggregate last_applied_patches from all hosts
  ansible.builtin.set_fact:
    last_applied_patches_dict: >-
      {{
        dict(ansible_play_hosts | map('extract', hostvars, 'last_applied_patches')
        | zip(ansible_play_hosts))
      }}
  run_once: true

- name: Debug selected template (forced to fullreport.j2)
  ansible.builtin.debug:
    msg: "Using template: fullreport.j2"
  run_once: true

- name: Create HTML report using fullreport.j2
  ansible.windows.win_template:
    src: fullreport.j2
    dest: "C:\\Users\\p-sve7fz\\Desktop\\windows.html"
  vars:
    required_updates_dict: "{{ required_updates_dict }}"
    last_applied_patches_dict: "{{ last_applied_patches_dict }}"
  run_once: true

- name: Copy CSS directory over
  ansible.windows.win_copy:
    src: css
    dest: "C:\\Users\\p-sve7fz\\Desktop\\css"
    remote_src: no
    recurse: yes
  run_once: true

- name: Copy logos over
  ansible.windows.win_copy:
    src: "{{ item }}"
    dest: "C:\\Users\\p-sve7fz\\Desktop\\{{ item }}"
    remote_src: no
  loop:
    - "webpage_logo.png"
    - "redhat-ansible-logo.svg"
    - "server.png"
  run_once: true

- name: Restart IIS to reload content
  ansible.windows.win_shell: iisreset
  args:
    warn: false
  run_once: true

- name: Display link to inventory report
  ansible.builtin.debug:
    msg: "Please go to http://{{ ansible_host }}/windows.html"
  run_once: true
