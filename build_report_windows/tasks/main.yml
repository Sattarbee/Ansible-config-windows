- name: Ensure report directory exists
  ansible.windows.win_file:
    path: "C:\\Users\\p-sve7fz\\Desktop"
    state: directory

- name: Initialize required_updates_dict
  ansible.builtin.set_fact:
    required_updates_dict: {}

- name: Initialize last_applied_patches_dict
  ansible.builtin.set_fact:
    last_applied_patches_dict: {}

- name: Collect required_updates per host
  ansible.builtin.set_fact:
    required_updates_dict: "{{ required_updates_dict | combine({inventory_hostname: required_updates | default([])}) }}"

- name: Collect last_applied_patches per host
  ansible.builtin.set_fact:
    last_applied_patches_dict: "{{ last_applied_patches_dict | combine({inventory_hostname: last_applied_patches | default([])}) }}"

- name: Debug selected template (forced to fullreport.j2)
  ansible.builtin.debug:
    msg: "Using template: fullreport.j2"
  run_once: true

- name: Create HTML report using fullreport.j2
  ansible.windows.win_template:
    src: fullreport.j2
    dest: "C:\\Users\\p-sve7fz\\Desktop\\windows.html"
  vars:
    required_updates_dict: "{{ required_updates_dict }}"
    last_applied_patches_dict: "{{ last_applied_patches_dict }}"
  run_once: true

- name: Copy CSS directory over
  ansible.windows.win_copy:
    src: css
    dest: "C:\\Users\\p-sve7fz\\Desktop\\css"
    remote_src: no
    recurse: yes
  run_once: true

- name: Copy logos over
  ansible.windows.win_copy:
    src: "{{ item }}"
    dest: "C:\\Users\\p-sve7fz\\Desktop\\{{ item }}"
    remote_src: no
  loop:
    - "webpage_logo.png"
    - "redhat-ansible-logo.svg"
    - "server.png"
  run_once: true

- name: Restart IIS to reload content
  ansible.windows.win_shell: iisreset
  args:
    warn: false
  run_once: true

- name: Display link to inventory report
  ansible.builtin.debug:
    msg: "Please go to http://{{ ansible_host }}/windows.html"
  run_once: true
